---
const {} = Astro.props;
const duration = "4";
---

<div
    data-duration={`${duration}s`}
    id="marquee-0"
    class="border-white border-2 box-content relative overflow-x-scroll overflow-y-visible"
>
    <slot/>
</div>

<style>
    .scroll-side {
        animation: scrollSide var(--duration) linear infinite;
    }
    @keyframes scrollSide {
        100% {
            left: calc(-100% + 1rem);
        }
    }
</style>

<script>
    // add uuid and taget with uuid so that nothing will interference with each other
    const rootElement = document.getElementById("marquee-0") as HTMLDivElement;
    const items = rootElement.children as HTMLCollectionOf<HTMLElement>;

    rootElement.style.setProperty(
        "--duration",
        rootElement.dataset.duration || "1s",
    );

    const duration = Number(rootElement.dataset.duration?.replace("s", ""));
    const relativeAnimationDuration = duration / items.length;

    let rootHeight = 0;
    for (let i = 0; i < items.length; i++) {
        const element = items[i];

        rootHeight =
            rootHeight < element.offsetHeight
                ? element.offsetHeight
                : rootHeight;

        element.className = `${element.classList} scroll-side`;

        const uniqueDelay = items.length - (i + 1);
        element.style.animationDelay = `${relativeAnimationDuration * uniqueDelay * -1}s`;
    }
    rootElement.style.height = `${rootHeight}px`;
</script>
